AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  SourceS3BucketName:
    Type: "String"
    Default: "s3-sync-test-src"
  SourceS3BucketPrefix:
    Type: "String"
    Default: ""
  TargetS3BucketName:
    Type: "String"
    Default: "s3-sync-test-dest"
  LambdaRoleName:
    Type: "String"
    Default: "s3sync-lambda-executor"
  SqsQueueName:
    Type: "String"
    Default: "s3-sync-queue-123456"

Resources:
  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref LambdaRoleName
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"

  SourceS3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref SourceS3BucketName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt ["LambdaRole", "Arn"]
            Action:
              - "s3:GetObject"
            Resource:
              - !Sub "arn:aws:s3:::${SourceS3BucketName}"
              - !Sub "arn:aws:s3:::${SourceS3BucketName}/*"

  TargetS3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref TargetS3BucketName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt ["LambdaRole", "Arn"]
            Action:
              - "s3:PutObject"
            Resource:
              - !Sub "arn:aws:s3:::${TargetS3BucketName}"
              - !Sub "arn:aws:s3:::${TargetS3BucketName}/*"

  SqsQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Ref SqsQueueName
      VisibilityTimeout: 43200

  SqsPolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      Queues:
      - !Ref SqsQueue
      PolicyDocument:
        #Id: MyQueuePolicy
        Version: '2012-10-17'
        Statement:
        - Sid: "Allow-S3-SendMessage"
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - sqs:SendMessage
          Resource: "*"
          Condition:
            ArnEquals:
              aws:SourceArn: !Sub "arn:aws:s3:::${SourceS3BucketName}"
        - Sid: Allow-Lambda-ReceiveMessage
          Effect: Allow
          Principal:
            AWS: !GetAtt ["LambdaRole", "Arn"]
          Action:
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          Resource: "*"

Outputs:
  SqsQueueArn:
    Description: "Arn of SqsQueue"
    Value: !GetAtt ["SqsQueue", "Arn"]
    Export:
      Name: !Sub "${AWS::StackName}-SqsQueueArn"
  SourceS3BucketName:
    Description: "Arn of Source S3 bucket"
    Value: !Ref SourceS3BucketName
    Export:
      Name: !Sub "${AWS::StackName}-SourceS3BucketName"
  TargetS3BucketName:
    Description: "Arn of Target S3 bucket"
    Value: !Ref TargetS3BucketName
    Export:
      Name: !Sub "${AWS::StackName}-TargetS3BucketName"




